{
    "id": "file-gtk-11",
    "name": "ProjectSettings",
    "parent": "",
    "title": false,
    "path": "/home/alan/gitlive/app.Builder.js/Builder4/ProjectSettings.bjs",
    "items": [
        {
            "|void:save": "",
            ".Project.Project:project": "",
            ".signal:void:buttonPressed": "(string btn)",
            "border_width": 5,
            "id": "ProjectSettings",
            "xtype": "VBox",
            "|homogeneous": "false",
            "|void:show": " (Project.Project project) {\n    _this.project = project;\n    _this.path.el.label = project.firstPath();\n    // get the active project.\n     var lm = Gtk.SourceLanguageManager.get_default();\n                \n    ((Gtk.SourceBuffer)(_this.view.el.get_buffer())) .set_language(\n    \n        lm.get_language(\"html\"));\n  \n    //print (project.fn);\n    //project.runhtml = project.runhtml || '';\n    _this.view.el.get_buffer().set_text(project.runhtml);\n    \n    //this.el.show_all();\n}\n",
            "|xns": "Gtk",
            "items": [
                {
                    "pack": "pack_start,false,false,0",
                    "xtype": "HBox",
                    "|homogeneous": "false",
                    "|xns": "Gtk",
                    "items": [
                        {
                            "listeners": {
                                "button_press_event": "() => {\n    var buf =    _this.view.el.get_buffer();\n   Gtk.TextIter s;\n     Gtk.TextIter e;\n    buf.get_start_iter(out s);\n    buf.get_end_iter(out e);\n      _this.project.runhtml = buf.get_text(s,e,true);\n    \n          \n    _this.buttonPressed(\"apply\");\n        return false;\n}"
                            },
                            "label": "Apply",
                            "pack": "add",
                            "xtype": "Button",
                            "|xns": "Gtk"
                        },
                        {
                            "listeners": {
                                "button_press_event": "() => {\n    var buf =    _this.view.el.get_buffer();\n    Gtk.TextIter s;\n    Gtk.TextIter e;\n    buf.get_start_iter(out s);\n    buf.get_end_iter(out e);\n    _this.project.runhtml = buf.get_text(s,e,true);\n    \n          \n    _this.buttonPressed(\"save\");\n        return false;\n}"
                            },
                            "label": "Save",
                            "pack": "add",
                            "xtype": "Button",
                            "|xns": "Gtk"
                        }
                    ]
                },
                {
                    "id": "path",
                    "label": "filename",
                    "pack": "pack_start,false,false,0",
                    "xalign": 0,
                    "xtype": "Label",
                    "|xns": "Gtk"
                },
                {
                    "|xns": "Gtk",
                    "xtype": "Label",
                    "pack": "pack_start,false,false,0",
                    "label": "HTML To insert at end of <HEAD>"
                },
                {
                    "pack": "pack_start,false,false,0",
                    "xtype": "HBox",
                    "|homogeneous": "false",
                    "|xns": "Gtk",
                    "items": [
                        {
                            "label": "HTML template file",
                            "pack": "pack_start,false,false,0",
                            "xtype": "Label",
                            "|xns": "Gtk"
                        },
                        {
                            "id": "base_template",
                            "pack": "add",
                            "xtype": "Entry",
                            "|xns": "Gtk"
                        }
                    ]
                },
                {
                    "pack": "pack_start,false,false,0",
                    "xtype": "HBox",
                    "|homogeneous": "false",
                    "|xns": "Gtk",
                    "items": [
                        {
                            "label": "root URL",
                            "pack": "pack_start,false,false,0",
                            "xtype": "Label",
                            "|xns": "Gtk"
                        },
                        {
                            "id": "rootURL",
                            "pack": "add",
                            "xtype": "Entry",
                            "|xns": "Gtk"
                        }
                    ]
                },
                {
                    "pack": "pack_start,true,true,0",
                    "xtype": "ScrolledWindow",
                    "|xns": "Gtk",
                    "items": [
                        {
                            "listeners": {
                                "key_release_event": " ( event) =>{\n    if (event.keyval != 115) {\n        return false;\n         \n    }\n    if   ( (event.state & Gdk.ModifierType.CONTROL_MASK ) < 1 ) {\n        return false;\n    }\n     var buf =    this.el.get_buffer();\n    Gtk.TextIter s;\n    Gtk.TextIter e;\n    buf.get_start_iter(out s);\n    buf.get_end_iter(out e);\n    _this.project.runhtml = buf.get_text(s,e,true);\n    \n          \n    _this.buttonPressed(\"save\");\n     \n    return false;\n         \n}"
                            },
                            "id": "view",
                            "pack": "add",
                            "xtype": "View",
                            "|init": " \n    var description =   Pango.FontDescription.from_string(\"monospace\");\n    description.set_size(9000);\n    this.el.override_font(description);",
                            "|xns": "GtkSource"
                        }
                    ]
                }
            ]
        }
    ],
    "permname": "",
    "modOrder": ""
}