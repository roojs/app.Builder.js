{
    "id": "file-gtk-9",
    "name": "MainWindow",
    "parent": "",
    "title": false,
    "path": "/home/alan/gitlive/app.Builder.js/Builder4/MainWindow.bjs",
    "items": [
        {
            "listeners": {
                "show": "  ( ) => {\n    // hide the file editing..\n   \n    this.hideViewEditing();\n}",
                "delete_event": "  (   event) => {\n    return false;\n}"
            },
            ".Project.Project:project": "",
            ".Xcls_ClutterFiles:clutterfiles": "null",
            ".Xcls_LeftProps:left_props": "null",
            ".Xcls_ProjectSettings:projectsettings": "null",
            ".Xcls_WindowLeftProjects:left_projects": "null",
            ".Xcls_WindowLeftTree:left_tree": "null",
            ".Xcls_WindowRooView:window_rooview": "null",
            ".bool:children_loaded": "false",
            ".string:state": "",
            ".string:title": "\"Application Builder\"",
            "border_width": 0,
            "default_height": 500,
            "default_width": 800,
            "destroy": "() => {\n   Gtk.main_quit();\n}",
            "id": "MainWindow",
            "xtype": "Window",
            "|init": " this.state = \"files\";\n\t  \n    //this.el.show_all();\n    \n    ",
            "|type": "Gtk.WindowType.TOPLEVEL",
            "|void:hideProjectEdit": " () {\n    // return to editing state..\n       \n      _this.projectbutton.el.show();\n     _this.projecteditbutton.el.show();\n     \n     \n    //this.rooview.el.hide();\n     //this.edit_project.el.show();\n        _this.projecteditview.el.save_easing_state();\n    var el = _this.rooview.el;\n    el.save_easing_state();\n\n    \n    el.set_scale(1.0f,1.0f);\n       _this.projecteditview.el.set_scale(1.0f,0.0f);\n    _this.state = \"edit\";\n\n \n    //_this.clutterfiles.loadProject(_this.project);\n\n    el.restore_easing_state();\n      _this.projecteditview.el.restore_easing_state();  \n  \n}\n",
            "|void:hideViewEditing": "  ( )   {\n    \n     this.window_rooview.createThumb();\n          _this.projecteditbutton.el.hide();\n     this.editpane.el.hide();\n    //this.rooview.el.hide();\n     this.left_projects.el.show();\n    \n    var el = _this.rooview.el;\n    el.save_easing_state();\n      el.set_easing_duration(1000);\n    // show project / file view..\n    //_this.mainpane.lastWidth = _this.leftpane.el.get_position();\n    //_this.mainpane.el.set_position(0);\n    // rotate y 180..\n    el.set_rotation_angle(Clutter.RotateAxis.Y_AXIS, 360.0f);\n    el.set_scale(0.0f,0.0f);\n   \n        _this.state = \"files\";\n\n    _this.left_projects.selectProject(_this.project);\n    //_this.clutterfiles.loadProject(_this.project);\n\n    el.restore_easing_state();\n        \n    print(\"show view browsing\");\n}",
            "|void:initChildren": " () {\n    // this needs putting in a better place..\n    \n    print(\"init children\");\n    this.left_tree = new Xcls_WindowLeftTree();\n    this.left_tree.ref();\n    this.tree.el.pack_start(this.left_tree.el,true, true,0);\n    this.left_tree.node_selected.connect((sel) => {\n        if (sel == null) {\n            this.left_props.el.hide();\n        } \n        this.left_props.el.show();\n        this.left_props.load(this.left_tree.getActiveFile(), sel);\n        \n    \n    });\n    this.left_tree.before_node_change.connect((sel) => {\n        this.left_props.finish_editing();\n         \n    });\n    \n    \n\n\n\n    this.left_props =new Xcls_LeftProps();\n    this.left_props.ref();\n    this.props.el.pack_start(this.left_props.el,true, true,0);\n\n\n    // left projects..\n     this.left_projects = new Xcls_WindowLeftProjects();\n     this.left_projects.ref();\n    this.leftpane.el.pack_start(this.left_projects.el,true, true,0);\n   \n    this.left_projects.project_selected.connect((proj) => {\n        proj.scanDirs();\n        _this.clutterfiles.loadProject(proj);\n    \n    });\n    \n   \n    // project edit..\n    this.projectsettings  =new Xcls_ProjectSettings();\n    this.projectsettings.ref();  /// really?\n    ((Gtk.Container)(this.projecteditview.el.get_widget())).add(this.projectsettings.el);\n    //this.projectsettings.el.show_all();\n\n    var stage = _this.projecteditview.el.get_stage();\n    stage.set_background_color(  Clutter.Color.from_string(\"#000\"));\n    \n     this.projectsettings.buttonPressed.connect((btn) => {\n        if (btn == \"save\") {\n             _this.window_rooview.view.renderJS(true);\n        }\n        if (btn == \"apply\") {\n            _this.window_rooview.view.renderJS(true);\n            return;\n        }\n        this.hideProjectEdit();\n         \n     });\n    \n    \n    \n    \n    \n    //  roo view\n    \n     this.window_rooview  =new Xcls_WindowRooView();\n    this.window_rooview.ref();\n    ((Gtk.Container)(this.rooview.el.get_widget())).add(this.window_rooview.el);\n    this.window_rooview.el.show_all();\n\n    stage = _this.rooview.el.get_stage();\n    stage.set_background_color(  Clutter.Color.from_string(\"#000\"));\n    \n   \n    \n    // clutter files\n    \n    \n    this.clutterfiles = new Xcls_ClutterFiles();\n    this.clutterfiles.ref();\n    stage.add_child(this.clutterfiles.el);\n    this.clutterfiles.el.show_all();\n\n\n    this.clutterfiles.open.connect((file) => { \n        _this.project = file.project;\n        _this.showViewEditing();\n        this.left_tree.model.loadFile(file);\n        \n        this.window_rooview.loadFile(file);\n        print(\"OPEN : \" + file.name);\n\n    });\n\n\n\n\n\n\n    //w.el.show_all();\n    var tl = new Clutter.Timeline(6000);\n    tl.set_repeat_count(-1);\n    tl.start();\n    tl.ref();\n\n    this.children_loaded = true;\n\n\n\n\n}\n",
            "|void:setTitle": " (string str) {\n    this.el.set_title(this.title + \" - \" + str);\n}\n",
            "|void:show": "() {\n    this.left_tree =new Xcls_WindowLeftTree();\n    _this.vbox.el.pack_start(this.left_tree.el,true, true,0);\n    this.el.show_all();\n\n}",
            "|void:showProjectEdit": " () {\n    // make the browser smaller, and show the edit dialog\n    \n    \n     _this.projectbutton.el.hide();\n     _this.projecteditbutton.el.hide();\n     \n     \n    //this.rooview.el.hide();\n    this.projectsettings.el.show_all();\n    this.projectsettings.show(this.project);\n    _this.projecteditview.el.save_easing_state();\n        \n    var el = _this.rooview.el;\n    el.save_easing_state();\n   \n    \n    el.set_scale(0.5f,0.5f);\n\n    _this.projecteditview.el.set_scale(1.0f,1.0f);\n   \n    _this.state = \"projectedit\";\n     \n \n    //_this.clutterfiles.loadProject(_this.project);\n\n    el.restore_easing_state();\n    _this.projecteditview.el.restore_easing_state();\n  //  print(\"show view browsing\");\n    \n}\n",
            "|void:showViewEditing": "  ( )  {\n     this.editpane.el.show();\n  //   this.rooview.el.show();\n     this.left_projects.el.hide();\n    \n       _this.projecteditbutton.el.show();\n    \n    var el = _this.rooview.el;\n        el.save_easing_state();\n  \n    \n        el.set_rotation_angle(Clutter.RotateAxis.Y_AXIS, 0.0f);\n        el.set_scale(1.0f,1.0f);\n        _this.state = \"edit\";\n       // _this.mainpane.el.set_position(_this.leftpane.lastWidth);\n        _this.clutterfiles.el.hide();\n    \n    el.restore_easing_state();\n        \n    print(\"show view editing\");\n}",
            "|xns": "Gtk",
            "items": [
                {
                    "|homogeneous": "false",
                    "id": "vbox",
                    "pack": "add",
                    "xtype": "VBox",
                    "|xns": "Gtk",
                    "items": [
                        {
                            "|homogeneous": "true",
                            "id": "topbar",
                            "pack": "pack_start,false,true,0",
                            "xtype": "HBox",
                            "|height_request": 20,
                            "|vexpand": "false  ",
                            "|xns": "Gtk"
                        },
                        {
                            ".int:lastWidth": 0,
                            "id": "mainpane",
                            "pack": "pack_end,true,true,0",
                            "position": 400,
                            "xtype": "HPaned",
                            "|xns": "Gtk",
                            "items": [
                                {
                                    "id": "leftpane",
                                    "pack": "add1",
                                    "xtype": "VBox",
                                    "|xns": "Gtk",
                                    "items": [
                                        {
                                            "id": "editpane",
                                            "pack": "pack_start,false,true,0",
                                            "xtype": "VPaned",
                                            "|xns": "Gtk",
                                            "items": [
                                                {
                                                    "id": "tree",
                                                    "pack": "add1",
                                                    "xtype": "VBox",
                                                    "|xns": "Gtk"
                                                },
                                                {
                                                    "id": "props",
                                                    "pack": "add2",
                                                    "xtype": "VBox",
                                                    "|xns": "Gtk"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "pack": "add2",
                                    "xtype": "VBox",
                                    "|xns": "Gtk",
                                    "items": [
                                        {
                                            "listeners": {
                                                "size_allocate": "  (  alloc) => {\n    //if (!_this.children_loaded) {  return; }\n    print(\"size_allocation %d,%d\\n\".printf(alloc.width, alloc.height));\n\n/*    _this.rooview.el.set_size(this.el.get_stage().width-50,\n            this.el.get_stage().height);\n    _this.clutterfiles.set_size(this.el.get_stage().width-50,\n           this.el.get_stage().height);\n*/\n   // this.el.set_size_request(alloc.width,alloc.height);\n   // this.el.get_stage().set_size(alloc.width,alloc.height);\n    _this.rooview.el.set_size(alloc.width-50,\n            alloc.height);\n    _this.clutterfiles.set_size(alloc.width-50,\n           alloc.height);\n    _this.projecteditview.el.set_size(alloc.width-50,\n           alloc.height / 2.0f);\n\n}"
                                            },
                                            "id": "clutterembed",
                                            "pack": "pack_start,true,true,0",
                                            "xtype": "Embed",
                                            "|init": "    var stage = this.el.get_stage();\n    stage.set_background_color(  Clutter.Color.from_string(\"#000\"));\n    \n    \n",
                                            "|xns": "GtkClutter",
                                            "items": [
                                                {
                                                    "id": "rooview",
                                                    "pack": "get_stage().add_child",
                                                    "xtype": "Actor",
                                                    "|init": "{\n   \n   \n    this.el.add_constraint(\n        new Clutter.AlignConstraint(\n            _this.clutterembed.el.get_stage(), \n            Clutter.AlignAxis.X_AXIS,\n            1.0f\n        )\n    );\n        \n    //this.el.set_position(100,100);\n    this.el.set_pivot_point(1.0f,1.0f);\n    \n    this.el.set_size(_this.clutterembed.el.get_stage().width-50,\n            _this.clutterembed.el.get_stage().height);\n            \n}",
                                                    "|xns": "GtkClutter"
                                                },
                                                {
                                                    "id": "projecteditview",
                                                    "pack": "get_stage().add_child",
                                                    "xtype": "Actor",
                                                    "|init": "{\n   \n   \n    this.el.add_constraint(\n        new Clutter.AlignConstraint(\n            _this.clutterembed.el.get_stage(), \n            Clutter.AlignAxis.X_AXIS,\n            1.0f\n        )\n    );\n        \n    //this.el.set_position(100,100);\n    this.el.set_pivot_point(0.0f,0.0f);\n    this.el.set_scale(1.0f,0.0f);\n    this.el.set_size(_this.clutterembed.el.get_stage().width-50,\n            _this.clutterembed.el.get_stage().height /2);\n            \n}",
                                                    "|xns": "GtkClutter"
                                                },
                                                {
                                                    "id": "buttonlayout",
                                                    "pack": "get_stage().add_child",
                                                    "xtype": "Actor",
                                                    "|init": "{\n    \n    this.el.add_constraint(\n        new Clutter.AlignConstraint(\n            _this.clutterembed.el.get_stage(), \n            Clutter.AlignAxis.X_AXIS,\n            0.0f\n        )\n    );\n     \n    \n    //this.el.set_position(100,100);\n    this.el.set_pivot_point(0.5f,0.5f);\n     this.el.set_size(50,\n           _this.clutterembed.el.get_stage().height);\n     \n}",
                                                    "|xns": "Clutter",
                                                    "items": [
                                                        {
                                                            "|orientation": "Clutter.Orientation.VERTICAL",
                                                            "*prop": "layout_manager",
                                                            "xtype": "BoxLayout",
                                                            "|xns": "Clutter"
                                                        },
                                                        {
                                                            "listeners": {
                                                                "enter_event": "(  event)  => {\n    this.el.background_color = new Clutter.Color.from_string(\"#333\");\n        return false;\n}",
                                                                "leave_event": "(  event)  => {\n    this.el.background_color = new Clutter.Color.from_string(\"#000\");\n    return false;\n}",
                                                                "button_press_event": "  ( ) => {\n    switch (_this.state) {\n        case \"edit\":\n        \n            _this.hideViewEditing();\n            break;  \n        case \"files\":\n            _this.showViewEditing();\n            break; \n        default:\n            break;\n    }\n    return false;    \n\n}"
                                                            },
                                                            "id": "projectbutton",
                                                            "pack": "add_child",
                                                            "xtype": "Actor",
                                                            "|init": "this.el.set_size(50,50);",
                                                            "|reactive": "true",
                                                            "|xns": "Clutter",
                                                            "items": [
                                                                {
                                                                    ".ctor": "new Clutter.Text.full(\"Sans 10px\",\"Open\\nFiles\",new Clutter.Color.from_string(\"#fff\"))",
                                                                    "pack": "add_child",
                                                                    "xtype": "Text",
                                                                    "|line_alignment": "Pango.Alignment.CENTER",
                                                                    "|x_align": "Clutter.ActorAlign.CENTER",
                                                                    "|x_expand": "false",
                                                                    "|xns": "Clutter",
                                                                    "|y_align": "Clutter.ActorAlign.CENTER",
                                                                    "|y_expand": "false"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "listeners": {
                                                                "enter_event": "(  event)  => {\n    this.el.background_color = new Clutter.Color.from_string(\"#333\");\n        return false;\n}",
                                                                "leave_event": "(  event)  => {\n    this.el.background_color = new Clutter.Color.from_string(\"#000\");\n    return false;\n}",
                                                                "button_press_event": "  ( ) => {\n    switch (_this.state) {\n        case \"edit\":\n            _this.showProjectEdit();\n            break;  \n        case \"files\":\n            // _this.showViewEditing();\n            break; \n        case \"projectedit\":\n            _this.hideProjectEdit();\n            break;\n        default:\n            break;\n    }\n    return false;    \n\n\n}"
                                                            },
                                                            "id": "projecteditbutton",
                                                            "pack": "add_child",
                                                            "xtype": "Actor",
                                                            "|init": "this.el.set_size(50,50);",
                                                            "|reactive": "true",
                                                            "|xns": "Clutter",
                                                            "items": [
                                                                {
                                                                    ".ctor": "new Clutter.Text.full(\"Sans 10px\",\"Edit\\nProject\\nDetails\",new Clutter.Color.from_string(\"#fff\"))",
                                                                    "|line_alignment": "Pango.Alignment.CENTER",
                                                                    "pack": "add_child",
                                                                    "xtype": "Text",
                                                                    "|x_align": "Clutter.ActorAlign.CENTER",
                                                                    "|x_expand": "false",
                                                                    "|xns": "Clutter",
                                                                    "|y_align": "Clutter.ActorAlign.CENTER",
                                                                    "|y_expand": "false"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "listeners": {
                                                                "enter_event": "(  event)  => {\n    this.el.background_color = new Clutter.Color.from_string(\"#333\");\n        return false;\n}",
                                                                "leave_event": "(  event)  => {\n    this.el.background_color = new Clutter.Color.from_string(\"#000\");\n    return false;\n}",
                                                                "button_press_event": "  ( ) => {\n    \n    \n    \n    switch (_this.state) {\n        case \"edit\":\n            _this.showPalete();\n            break;\n        case \"showpalete\":\n            _this.hidePalete();\n        default:\n            break;\n    }\n    return false;    \n\n\n}"
                                                            },
                                                            "id": "paleteshowbutton",
                                                            "pack": "add_child",
                                                            "xtype": "Actor",
                                                            "|init": "this.el.set_size(50,50);",
                                                            "|reactive": "true",
                                                            "|xns": "Clutter",
                                                            "items": [
                                                                {
                                                                    ".ctor": "new Clutter.Text.full(\"Sans 10px\",\"Show\\nPalate\",new Clutter.Color.from_string(\"#fff\"))",
                                                                    "pack": "add_child",
                                                                    "xtype": "Text",
                                                                    "|line_alignment": "Pango.Alignment.CENTER",
                                                                    "|x_align": "Clutter.ActorAlign.CENTER",
                                                                    "|x_expand": "false",
                                                                    "|xns": "Clutter",
                                                                    "|y_align": "Clutter.ActorAlign.CENTER",
                                                                    "|y_expand": "false"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "listeners": {
                                                                "enter_event": "(  event)  => {\n    this.el.background_color = new Clutter.Color.from_string(\"#333\");\n        return false;\n}",
                                                                "leave_event": "(  event)  => {\n    this.el.background_color = new Clutter.Color.from_string(\"#000\");\n    return false;\n}",
                                                                "button_press_event": "  ( ) => {\n    \n    \n    \n    switch (_this.state) {\n        case \"edit\":\n            _this.showPalete();\n            break;\n        case \"showpalete\":\n            _this.hidePalete();\n        default:\n            break;\n    }\n    return false;    \n\n\n}"
                                                            },
                                                            "id": "addpropertybutton",
                                                            "pack": "add_child",
                                                            "xtype": "Actor",
                                                            "|init": "this.el.set_size(50,50);",
                                                            "|reactive": "true",
                                                            "|xns": "Clutter",
                                                            "items": [
                                                                {
                                                                    ".ctor": "new Clutter.Text.full(\"Sans 10px\",\"Show\\nPalate\",new Clutter.Color.from_string(\"#fff\"))",
                                                                    "pack": "add_child",
                                                                    "xtype": "Text",
                                                                    "|line_alignment": "Pango.Alignment.CENTER",
                                                                    "|x_align": "Clutter.ActorAlign.CENTER",
                                                                    "|x_expand": "false",
                                                                    "|xns": "Clutter",
                                                                    "|y_align": "Clutter.ActorAlign.CENTER",
                                                                    "|y_expand": "false"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ],
    "permname": "",
    "modOrder": ""
}